[versions]
agp = "8.9.2"
kotlin = "2.1.10"
coreKtx = "1.16.0"
coreSplashscreen = "1.0.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
kotlinxCoroutinesTest = "1.10.2"
lifecycleRuntimeKtx = "2.8.7"
activityCompose = "1.10.1"
composeBom = "2025.04.01"
jetbrainsKotlinJvm = "2.1.10"
coroutines = "1.10.2"
navigationCompose = "2.8.9"
firebaseBom = "33.13.0"
googleServices = "4.4.2"
kotlinxSerialization = "1.8.1"
datastorePreferences = "1.1.1"
androidxSecurityCrypto = "1.0.0"
coilCompose = "3.2.0"

# Network
okHttp3 = "4.12.0"
retrofitSerializationConverter = "1.0.0"
retrofit = "2.11.0"

mongoBOM = "5.5.0"
bson = "5.5.0"
gson = "2.11.0"

# build-logic gradle plugins
androidGradlePlugin = "8.9.2"
androidTools = "31.9.2"
ksp = "2.1.10-1.0.31"
room = "2.7.1"
hilt = "2.56.2"
hiltAndroidx = "1.2.0"

# Testing
androidxTest = "1.6.1"

# default config
projectCompileSdk = "35"
projectMinSdk = "25"
projectTargetSdk = "35"
projectVersionCode = "1"
projectVersionName = "1.0"
appcompat = "1.7.0"
material = "1.12.0"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "androidxTest" }
androidx-test-core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "androidxTest" }
androidx-test-rules = { group = "androidx.test", name = "rules", version.ref = "androidxTest" }
androidx-security-crypto = { group = "androidx.security", name = "security-crypto", version.ref = "androidxSecurityCrypto" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }
kotlinx-coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-test = { group = "org.jetbrains.kotlin", name = "kotlin-test", version.ref = "kotlin" }

# Network Calls
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
kotlinx-serialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
retrofit-serialization-converter = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofitSerializationConverter" }
okHttp3 = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okHttp3" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp3" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

io-coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coilCompose" }
io-coil-network = { group = "io.coil-kt.coil3", name = "coil-network-okhttp", version.ref = "coilCompose" }

# Database Drivers
mongodb-driver-bom = { group = "org.mongodb", name = "mongodb-driver-bom", version.ref = "mongoBOM" }
mongodb-driver-coroutine = { group = "org.mongodb", name = "mongodb-driver-kotlin-coroutine" }
bson-kotlinx = { group = "org.mongodb", name = "bson-kotlinx", version.ref = "bson" }

# build-logic dependencies
# Android Application
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
android-tools-common = { group = "com.android.tools", name = "common", version.ref = "androidTools" }
compose-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
kotlin-gradlePlugin =  { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
room-gradlePlugin =  { group = "androidx.room", name = "room-gradle-plugin", version.ref = "room" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

# Firebase
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-auth = { group = "com.google.firebase", name = "firebase-auth" }

# Hilt
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-core = { group = "com.google.dagger", name = "hilt-core", version.ref = "hilt" }
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hiltAndroidx" }
ksp = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }
dagger-hilt-test = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }



[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
jetbrains-kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "jetbrainsKotlinJvm" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices"}

# custom plugins
ott-android-application = { id = "ott.android.application" }
ott-android-application-compose = { id = "ott.android.application.compose" }
ott-android-library = { id = "ott.android.library" }
ott-android-library-compose = { id = "ott.android.library.compose" }
ott-android-hilt = { id = "ott.android.hilt" }
ott-feature-ui = { id = "ott.feature.ui" }
ott-jvm-library = { id = "ott.jvm.library" }
ott-jvm-retrofit = { id = "ott.jvm.retrofit" }

[bundles]
compose = [
    "androidx-activity-compose",
    "androidx-lifecycle-runtime-compose",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-material3",
    "androidx-ui",
    "androidx-ui-graphics",
    "androidx-ui-tooling-preview",
]
compose-debug = [
    "androidx-ui-tooling",
    "androidx-ui-test-manifest",
]
retrofit = [
    "retrofit",
    "okHttp3",
    "okhttp-logging",
#    "gson",
#    "converter-gson",
    "kotlinx-serialization",
    "retrofit-serialization-converter"
]

coil = [
    "io-coil-compose",
    "io-coil-network"
]